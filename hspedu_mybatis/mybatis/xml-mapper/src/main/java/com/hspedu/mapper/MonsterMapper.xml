<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--老师解读
1. 这是一个mapper xml 文件
2. 该文件可以去实现对应的接口的方法
3. namespace 指定该xml文件和哪个接口对应!!!
-->
<mapper namespace="com.hspedu.mapper.MonsterMapper">

    <!--
    1. 配置/实现public List<Monster> findMonsterByNameORId(Monster monster);
    2. 通过id 或者名字查询
    3. `id` = #{id} `id`表示表的字段名 #{id} 中的id表示你传入的Monster对象的属性名
    -->
    <select id="findMonsterByNameORId" parameterType="Monster" resultType="Monster">
        SELECT * FROM `monster` WHERE `id` = #{id} OR `name` = #{name}
    </select>

    <!--
    1. 配置/实现 public List<Monster> findMonsterByName(String name);
    2. 请查询 name 中 包含 "牛魔王" 的妖怪 - 是模糊查询
    3. 模糊查询的使用 取值 需要 ${value} 取值 value是
    -->
    <select id="findMonsterByName" parameterType="String" resultType="Monster">
        SELECT * FROM `monster` WHERE `name` LIKE '%${name}%'
    </select>

    <!--
    1. 配置/实现public List<Monster> findMonsterByIdAndSalary_PrameterHashMap(Map<String, Object> map);
    2. id > 10 并且 salary 大于 40, 要求传入的参数是HashMap
    3. 如果是以map形式传入参数，当你这样写条件 `id` > #{id} 表示你的map 中有一个k-v 中 key是id

    -->
    <select id="findMonsterByIdAndSalary_PrameterHashMap" parameterType="map" resultType="Monster">
        SELECT * FROM `monster`  WHERE `id` > #{id} AND `salary` > #{salary}
    </select>

    <!--
    1. 配置/实现 public List<Map<String, Object>>
       findMonsterByIdAndSalary_PrameterHashMap_ReturnHashMap(Map<String, Object> map);
    2. id > 10 并且 salary 大于 40, 要求传入的参数和返回的是HashMap
    -->
    <select id="findMonsterByIdAndSalary_PrameterHashMap_ReturnHashMap" parameterType="map" resultType="map">
        SELECT * FROM `monster`  WHERE `id` > #{id} AND `salary` > #{salary}
    </select>
</mapper>